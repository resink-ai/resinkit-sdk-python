name: Upload Python Package

on:
  push:
    tags:
      - "release-*"

permissions:
  contents: write # Allow release creation
  id-token: write # For PyPI trusted publishing

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/release-}
          echo "Publishing version: $VERSION"
          # Update version in pyproject.toml using sed for reliability
          sed -i "s/^version = [\"'][^\"']*[\"']/version = \"$VERSION\"/" pyproject.toml
          echo "Updated pyproject.toml with version: $VERSION"
          # Verify the change
          grep "^version =" pyproject.toml

      - name: Install build dependencies
        run: |
          uv tool install build
          uv tool install twine

      - name: Build release distributions
        run: uv tool run --from build pyproject-build

      - name: Check built packages
        run: |
          uv tool run twine check dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  testpypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/resinkit-sdk-python/

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
